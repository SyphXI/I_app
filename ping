# Load devices from file (error if missing)
$devicesPath = "devices.txt"
if (-not (Test-Path $devicesPath)) {
    Write-Error "devices.txt not found! Create it with one IP/hostname per line."
    exit 1
}
$devices = Get-Content -Path $devicesPath

if ($devices.Count -eq 0) {
    Write-Warning "No devices in list. Exiting."
    exit 1
}

# Collect results directly from parallel execution
$results = $devices | ForEach-Object -Parallel {
    $device = $_
    $pingResult = Test-Connection -ComputerName $device -Count 1 -ErrorAction SilentlyContinue
    $status = if ($pingResult) { "Online" } else { "Offline" }
    $responseTime = if ($pingResult) { $pingResult.ResponseTime } else { "N/A" }
    
    [PSCustomObject]@{
        Device = $device
        Status = $status
        ResponseTime_ms = $responseTime
        Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    }
} -ThrottleLimit 50

# Export to CSV with error handling (appends for history; change to -Force for overwrite)
$csvPath = "ping_results.csv"
try {
    $results | Export-Csv -Path $csvPath -NoTypeInformation -Append
    Write-Host "CSV exported successfully to $csvPath (rows: $($results.Count))"
} catch {
    Write-Error "Export failed: $($_.Exception.Message). Data in console below."
}

# Display summary in console
Write-Host "Scan complete! Checked $($devices.Count) devices."
$results | Format-Table -AutoSize
